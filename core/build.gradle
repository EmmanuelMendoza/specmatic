/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm'
    id 'signing'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://jcenter.bintray.com'
    }

    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

dependencies {
    implementation 'io.cucumber:gherkin:9.0.0'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    implementation 'org.yaml:snakeyaml:1.25'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.10.1'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.70'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.70'
    implementation 'io.ktor:ktor-server-netty:1.3.1'
    implementation 'io.ktor:ktor-server-core:1.3.1'
    implementation 'io.ktor:ktor-client-core-jvm:1.3.1'
    implementation 'io.ktor:ktor-client-cio:1.3.1'
    implementation 'org.jetbrains.kotlin:kotlin-maven-serialization:1.3.70'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0'
    implementation 'org.assertj:assertj-core:3.14.0'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    implementation 'org.junit.platform:junit-platform-launcher:1.6.0'

    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.4.2')

    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.26.0'
    testImplementation 'org.assertj:assertj-core:3.12.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.2'
    testImplementation 'org.json:json:20190722'
    testImplementation 'com.intuit.karate:karate-core:0.9.4'
    testImplementation 'com.intuit.karate:karate-apache:0.9.4'
    testImplementation 'com.intuit.karate:karate-junit5:0.9.4'
    testImplementation 'org.springframework:spring-web:5.2.2.RELEASE'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.3.70'
    testImplementation 'io.mockk:mockk:1.9.3.kotlin12'
    testImplementation 'org.assertj:assertj-core:3.14.0'
    testImplementation 'io.ktor:ktor-client-mock-jvm:1.3.1'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

test {
    useJUnitPlatform()
}

group = 'run.qontract'
version = '0.0.1'

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'qontract-core'
            from(components.java)
        }
    }
}

jar {
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'qontract-core'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Qontract'
                description = 'A Contract Testing Tool that leverages Gherkin to describe APIs in a human readable and machine enforceable manner'
                url = '//qontract.run'
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/qontract/qontract/blob/master/License.md'
                    }
                }
                developers {
                    developer {
                        id = 'qontractBuilders'
                        name = 'Qontract Builders'
                        email = 'info@qontract.run'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:qontract/qontract.git'
                    url = '//qontract.run/'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}