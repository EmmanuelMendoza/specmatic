plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

application {
    mainClassName = "application.QontractApplication"
}

jar {
    from '../version.properties'
}

shadowJar {
    archiveFileName = "qontract.${archiveExtension.get()}"
    from '../version.properties'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://jcenter.bintray.com'
    }

    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

dependencies {
    implementation 'info.picocli:picocli:4.0.3'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'io.ktor:ktor-client-core-jvm:1.3.1'
    implementation 'org.junit.platform:junit-platform-launcher:1.6.0'
    implementation('org.eclipse.jgit:org.eclipse.jgit:5.7.0.202003110725-r')
    implementation('org.eclipse.jgit:org.eclipse.jgit.ssh.apache:5.7.0.202003110725-r')

    implementation 'org.slf4j:slf4j-nop:1.7.30'
    implementation 'org.apache.kafka:kafka-clients:2.5.0'

    implementation(project(':core'))
    implementation(project(':junit5-support'))

    implementation 'io.ktor:ktor-client-cio:1.3.1'

    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.4.2')

    testImplementation 'io.mockk:mockk:1.9.3.kotlin12'
    testImplementation 'org.assertj:assertj-core:3.14.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.2'
}

test {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
